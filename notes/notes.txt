### Notes on Visual Studio Code IDE Running Python Code

#### Left Section (Run and Debug Panel)
- **VARIABLES:**
  - `win.bottom_label`: not available
  - `icon`: not available

- **WATCH:** (Empty)

- **CALL STACK:**
  - Running
  - MainThread: RUNNING
  - Thread-6: RUNNING

- **BREAKPOINTS:**
  - Raised Exceptions
  - Uncaught Exceptions
  - User Uncaught Exceptions

#### Middle Section (Code Editor)
- **Files:**
  - `model.py` (partially visible)
  - `main.py` (selected, code visible)

- **main.py (Code Snippet):**
  ```python
  def final_response(notes):
      feedback = model.gpt_handle(f'Notes : {notes} \n Those are your return notes')
      model.tts(feedback)
      # root.after(100, final_response, root, label, notes)
  
  def main():
      root = config()
  
      audio_file_pth = model.resource_path('temp_recording.wav')
      img_path = model.resource_path(os.path.join('icons'), 'leew.jpg')
      folder_path = model.resource_path('images')
      os.makedirs(folder_path, exist_ok=True)
      just_began = True
  
      logging.info(f'Looking for AUDIO_FILE at {audio_file_pth}')
  
      # Create a frame
      frame = ctk.CTkFrame(master=root)
      frame.pack(pady=20, padx=20, fill='both', expand=True)
      set_main_image(frame, img_path)
      label = set_bottom_label(frame, 'Getting ready')
      root.update()
  
      prepare(just_began=just_began)
  
      update_bottom_label(label, 'Listening...')
      root.update()
      listen(audio_file=audio_file_pth)
  
      update_bottom_label(label, 'Thinking...')
      root.update()
      user_input = transcribe(audio_file=audio_file_pth)
  ```

#### Right Section (Terminal/Console Output)
```
(cuda-env) PS C:\dev\openai_scratch\> & 'c:\Users\aryan\miniconda3\envs\cuda-env\python.exe' 'c:\Users\aryan\.vscode\extensions\ms-python.python-...
hpad\openscratch\main.py'
warnings.warn(f"{type
